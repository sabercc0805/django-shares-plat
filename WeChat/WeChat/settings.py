"""
Django settings for WeChat project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mi%tre=qolrih14h4ly^a%5btqcoj65op#dv&-ff-!peulu5c='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*',]

LOGIN_URL = '/index/'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'User.templatetags',
    'User',
    'captcha',
    'superuser',
    'account',
    "DjangoUeditor",
    'django_celery_beat', #添加app
    #'werkzeug_debugger_runserver',证书到时候直接域名使用
   # 'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WeChat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates').replace('\\', '/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WeChat.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
       # 'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysql',
        'USER': 'root',
        'PASSWORD': '199085zz',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# session 设置
SESSION_COOKIE_AGE = 60 * 30 # 设置过期时间30分钟，默认为两周
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # 设置关闭浏览器时失效
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

#LOGIN_URL = ''

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/static/uepload/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/uepload')


STATICFILES_DIRS = (
    ('css', os.path.join(STATIC_ROOT, 'css').replace('\\', '/')),
    ('js', os.path.join(STATIC_ROOT, 'js').replace('\\', '/')),
    ('images', os.path.join(STATIC_ROOT, 'images').replace('\\', '/')),
    ('bootstrap', os.path.join(STATIC_ROOT, 'bootstrap').replace('\\', '/')),
    ('uepload', os.path.join(MEDIA_ROOT).replace('\\', '/')),
    ('qrcode', os.path.join(STATIC_ROOT, 'qrcode').replace('\\', '/')),
    ('spreadqrcode', os.path.join(STATIC_ROOT, 'spreadqrcode').replace('\\', '/')),
    ('authorizeqrcode', os.path.join(STATIC_ROOT, 'authorizeqrcode').replace('\\', '/')),
    ('componentqrcode', os.path.join(STATIC_ROOT, 'componentqrcode').replace('\\', '/')),
)

#HERE = os.path.dirname(os.path.abspath(__file__))
#HERE = os.path.join(HERE, '../')
#STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don‘t forget to use absolute paths, not relative paths.
    #os.path.join(HERE, 'static/').replace('\\', '/'),
#)

# 发送邮箱验证码
EMAIL_HOST = "smtp.163.com"     # 服务器
EMAIL_PORT = 465                # 一般情况下都为25
EMAIL_HOST_USER = "fengyadata@163.com"     # 账号
EMAIL_HOST_PASSWORD = "fengyadata2019"          # 密码 (注意：这里的密码指的是授权码)
EMAIL_USE_SSL = True    
EMAIL_FROM = "fengyadata@163.com"      # 邮箱来自

CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Shanghai'


LOGGING_DIR = os.path.join(BASE_DIR, 'log')

LOGGING = {
    'version': 1,
     'disable_existing_loggers': True,
     'formatters': {
         'simple': {
             'format': '[%(asctime)s] %(levelname)s : %(message)s'
         },
         'verbose': {
             'format': '[%(asctime)s] %(levelname)s %(module)s %(process)d %(thread)d : %(message)s'
         },
         'standard':{
             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(levelname)s]- %(message)s'
         },
     },
 # handlers：用来定义具体处理日志的方式，可以定义多种，"default"就是默认方式，"console"就是打印到控制台方式。file是写入到文件的方式，注意使用的class不同
     'handlers': {
         'mail_admins':{
             'level': 'ERROR',
             'class': 'django.utils.log.AdminEmailHandler',
             'include_html': True,
         },
         'default': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOGGING_DIR,'WeChat_admin.log'),
            'maxBytes': 1024*1024*5,
            'backupCount': 5,
            'formatter':'simple',
         },
         'request_handler': {
             'level':'DEBUG',
             'class':'logging.handlers.RotatingFileHandler',
             'filename': os.path.join(LOGGING_DIR,'debug_request.log'),
             'maxBytes': 1024*1024*5,
             'backupCount': 5,
             'formatter':'standard',
         },
         # 'scprits_handler': {
         #    'level':'DEBUG',
         #    'class':'logging.handlers.RotatingFileHandler',
         #    'filename': os.path.join(LOGGING_DIR,'debug_scprits.log'),
         #    'maxBytes': 1024*1024*5,
         #    'backupCount': 5,
         #    'formatter':'standard',
         # },

         'console': {
             'level': 'INFO',
             'class': 'logging.StreamHandler', # 用这'logging.StreamHandler' 日志信息才会输出到console
             # 'filename':os.path.join(LOGGING_DIR,'info_console.log'),
             'formatter': 'standard',
         },
         # 'file': {
         #     'level': 'INFO',
         #     'class':'logging.handlers.RotatingFileHandler',
         #     'formatter': 'simple',
         #     'filename':os.path.join(LOGGING_DIR,'info_file.log'),
         #     'maxBytes': 1024*1024*5, # 5 MB
         #     'backupCount': 5,
         #     'mode': 'a',
         # },
     },
     'loggers': { # log记录器，配置之后就会对应的输出日志
         'django': {
             'handlers': ['console','request_handler','default'],
             'level':'INFO',
             'propagate': True,
         },
     },
}
